[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "harpy-analysis"
version = "0.0.2"
description = "single-cell spatial proteomics analysis that makes you happy"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = { file = "LICENSE" }
authors = [
    { name = "dambi" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing"
]
dependencies = [
    "spatialdata>=0.2.6",
    "xarray>=2024.10.0",
    "ome-zarr>=0.9.0",
    "scanpy>=1.9.1",
    "voronoi-diagram-for-polygons>=0.1.6",
    "rasterio>=1.3.2",
    "seaborn>=0.12.2",
    "leidenalg>=0.9.1",
    "geopandas>=1.0.1",
    "omegaconf==2.3.0",
    "nptyping",
    "magicgui",
    "pyrootutils",
    "universal_pathlib",
    "datasets",
    "crick",
    "spatialdata_io>=0.1.6",
]

# TODO: change to dependency-groups once pip has support https://github.com/pypa/pip/issues/12963
[project.optional-dependencies]
plugin = [
    "napari>=0.4.18",
    "hydra-core>=1.2.0",
    "hydra-colorlog>=1.2.0",
    "napari-spatialdata>=0.2.6",
    "squidpy>=1.5.0",
    "cellpose>=2.2.3",
    "pytest-qt"
]
testing = [
    "hydra-core>=1.2.0",
    "hydra-colorlog>=1.2.0",
    "cellpose>=2.2.3",
    "squidpy>=1.5.0",
    "datasets",
    "jax>=0.4.6",
    "jaxlib>=0.4.6",
    "basicpy>=1.0.0",
    "opencv-python",
    "pytest",
    "pytest-cov",
    "tox",
    "nbconvert"
]
cli = [
    "hydra-core>=1.2.0",
    "hydra-colorlog>=1.2.0",
    "submitit>=1.4.5",
    "hydra-submitit-launcher>=1.2.0"
]
docs = [
    "sphinx>=4.5",
    "sphinx-book-theme>=1.0.0",
    "sphinx_rtd_theme",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-autodoc-typehints",
    "sphinx-design",
    "ipython>=8.6.0",
    "sphinx-copybutton"
]
clustering = [
    "scikit-learn>=1.3.1",
    "datasets",
    "textalloc",
    "joypy",
    "bokeh",
    "spatialdata-plot>=0.2.0"
]
instanseg = [
    # TODO: wait for 0.0.7 release that drops AICSImageIO dependency
    # "instanseg-torch>=0.0.7"
    "instanseg-torch @ git+https://github.com/instanseg/instanseg"
]

[project.urls]
"Bug Tracker" = "https://github.com/saeyslab/harpy/issues"
"Documentation" = "https://github.com/saeyslab/harpy#README.md"
"Source Code" = "https://github.com/saeyslab/harpy"
"User Support" = "https://github.com/saeyslab/harpy/issues"

[project.scripts]
harpy = "harpy.single:main"

[project.entry-points."napari.manifest"]
harpy = "harpy:napari.yaml"

[tool.coverage.run]
omit = ["src/harpy/_tests/*", "experiments/*", "src/harpy/widgets/*", "docs/*" ]

[tool.ruff]
src = ["src"]
line-length = 120
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]
extend-include = ["*.ipynb"]

[tool.hatch.build.targets.wheel]
packages = ["src/harpy"]

[tool.hatch]
# TODO: remove once instanseg-torch is released
metadata.allow-direct-references = true

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"**/_tests/*" = ["D"]
"*/__init__.py" = ["F401"]
"**/test_data/*" = ["ALL"]

[tool.pytest.ini_options]
testpaths = ['src/harpy/_tests']

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.dependencies]
# add some dependencies, which will fetch them from conda instead of pypi
# needed to avoid gdal build step when installing rasterio
rasterio = ">=1.3.2"
# bioio = "*"
# numba = "*"

[tool.pixi.environments]
# add environments given features of dependency-groups
plugin = ["plugin"]
testing = ["testing"]
cli = ["cli"]
docs = ["docs"]
clustering = ["clustering"]
# TODO fix "instanseg-torch==0.0.6 depends on bioio>=1.1.0,<1.2.dev0 and numpy==2.2.2,
# we can conclude that instanseg-torch==0.0.6 cannot be used"
# instanseg = ["instanseg"]
